ekf_se_odom:
 frequency: 10
 sensor_timeout: 0.2
 two_d_mode: true # TODO - We're not working in a planar environment, probably want to set to false
 transform_time_offset: 0.0
 transform_timeout: 0.0
 print_diagnostics: true
 debug: true
 smooth_lagged_data: true
 history_length: 1
 dynamic_process_noise_covariance: false
 reset_on_time_jump: true
 use_control: false
 control_config: [false, false, false,
                  false, false, false]
 ## acceleration_limit: Set in the future

 map_frame: loam_gps
 odom_frame: odom
 base_link_frame: base_link
 world_frame: odom

 odom0: loam_odom_to_baselink
 odom0_config: [true,  true,  true,  #x y z
                true,  true,  true,  #roll pitch yaw
                false, false, false, #vx yv yz
                false, false, false, #vroll vpitch vyaw
                false, false, false] #ax ay az
 odom0_queue_size: 10
 odom0_nodelay: false
 odom0_differential: false
 odom0_relative: false

                            #x     y     z     r     p     y     vx     vy     vz    vr    vp    vy    ax    ay    az
 process_noise_covariance:  [1e-3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    1e-3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0.3,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0.3,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0.01, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0.5,   0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0.5,   0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0.1,  0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0.3,  0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.3,  0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.3,  0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

 initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]

ekf_se_loam_odom:
 frequency: 10
 sensor_timeout: 0.2
 two_d_mode: true # TODO - We're not working in a planar environment, probably want to set to false
 transform_time_offset: 0.0
 transform_timeout: 0.0
 print_diagnostics: true
 debug: true
 smooth_lagged_data: true
 history_length: 1
 dynamic_process_noise_covariance: false
 reset_on_time_jump: true
 use_control: false
 control_config: [false, false, false,
                  false, false, false]
 ## acceleration_limit: Set in the future

 map_frame: loam_gps
 odom_frame: odom
 base_link_frame: base_link
 world_frame: loam_gps

 odom0: loam_odom_to_baselink_2
 odom0_config: [true,  true,  true,  #x y z
                false, false, false, #roll pitch yaw
                false, false, false, #vx yv yz
                false, false, false, #vroll vpitch vyaw
                false, false, false] #ax ay az
 odom0_queue_size: 10
 odom0_nodelay: false
 odom0_differential: true
 odom0_relative: false

 odom1: loam_odom_to_baselink_2
 odom1_config: [false, false, false,  #x y z
                true,  true,  true,  #roll pitch yaw
                false, false, false, #vx yv yz
                false, false, false, #vroll vpitch vyaw
                false, false, false] #ax ay az
 odom1_queue_size: 10
 odom1_nodelay: false
 odom1_differential: false
 odom1_relative: false

 odom2: odometry/loam_gps ## From navsat_transform. Rectilinear coordinate system
 odom2_config: [true,  true, true,
                false, false, false,
                false, false, false,
                false, false, false,
                false, false, false]
 odom2_queue_size: 10
 odom2_nodelay: true
 odom2_differential: false
 odom2_relative: false

                            #x     y     z     r     p     y     vx     vy     vz    vr    vp    vy    ax    ay    az
 process_noise_covariance:  [1e-3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    1e-3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0.3,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0.3,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0.01, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0.5,   0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0.5,   0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0.1,  0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0.3,  0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.3,  0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.3,  0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

 initial_estimate_covariance: [1.0,  0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    1.0,  0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    1.0,  0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]

ekf_se_gps:
  frequency: 30
  sensor_timeout: 0.1
  two_d_mode: true #LOAM input and output must be 3D, otherwise the strange rotation of LOAM won't be supported
  transform_time_offset: 0.0
  transform_timeout: 0.0
  print_diagnostics: true
  smooth_lagged_data: true
  dynamic_process_noise_covariance: true
  debug: false
  debug_out_file: /home/roby/Desktop/gps_debug.txt

  #NOTE: technically not a good odom because it has GPS jumps
  map_frame: map
  odom_frame: loam_gps
  base_link_frame: base_link
  world_frame: map

  odom0: integrated_to_baselink
  odom0_config: [true,  true,  true,  #x y z
                 false, false, false,  #roll pitch yaw
                 false, false, false, #vx yv yz
                 false, false, false, #vroll vpitch vyaw
                 false, false, false] #ax ay az
  odom0_queue_size: 10
  odom0_nodelay: false
  odom0_differential: false
  odom0_relative: false

  odom1: integrated_to_baselink
  odom1_config: [false, false, false,  #x y z
                 true,  true,  true,  #roll pitch yaw
                 false, false, false, #vx yv yz
                 false, false, false, #vroll vpitch vyaw
                 false, false, false] #ax ay az
  odom1_queue_size: 10
  odom1_nodelay: false
  odom1_differential: false
  odom1_relative: false

  # odom2: odometry/gps ## From navsat_transform. Rectilinear coordinate system
  # odom2_config: [true,  true, true,
  #               false, false, false,
  #               false, false, false,
  #               false, false, false,
  #               false, false, false]
  # odom2_queue_size: 10
  # odom2_nodelay: true
  # odom2_differential: false
  # odom2_relative: false


  # pose0: amcl_pose
  # pose0_config: [true, true, true,
  #                false, false, true,
  #                false, false, false,
  #                false, false, false,
  #                false, false, false]
  # pose0_queue_size: 10
  # pose0_nodelay: false
  # pose0_differential: false
  # pose0_relative: false

  use_control: false

                             #x     y     z     r     p     y     vx     vy     vz    vr    vp    vy    ax    ay    az
  process_noise_covariance:  [1e-2, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    1e-2, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    1e-3, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    1e-3, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    1e-3, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    1e-3,  0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     1e-3,  0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     1e-3, 0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    1e-3, 0,   0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    1e-3, 0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    1e-3,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

  initial_estimate_covariance: [1,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    1,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    1.0,  0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]

#An instance of navsat_transform_node, which takes in GPS data and produces pose data that has been transformed into your robot's world frame (here, gps_map).
#Inputs: gps/fix, imu/data, odometry/filtered (from the gps_map node http://docs.ros.org/lunar/api/robot_localization/html/integrating_gps.html "This should just be the output of whichever robot_localization state estimation node instance you are using to fuse GPS data.")
#Output: odometry/gps (feed this into a state estimate node), gps/filtered (Not necessary, but nice) 
# navsat_transform:
#   frequency: 5
#   delay: 3.0
#   magnetic_declination_radians: 0.19914207
#   yaw_offset: 1.5707
#   zero_altitude: true
#   broadcast_utm_transform: false
#   publish_filtered_gps: true
#   use_odometry_yaw: true # Check if odom message uses the magnetometer
#   #May want to set this to true, since I can't trust the IMU's yaw
#   wait_for_datum: false
#   datum: [43.0852459944, -77.6783761986, 0, map, base_link]

loam_navsat_transform:
  frequency: 5
  delay: 3.0
  magnetic_declination_radians: 0 #0.19914207
  yaw_offset: 1.5707
  zero_altitude: true
  broadcast_utm_transform: true
  publish_filtered_gps: false
  use_odometry_yaw: true # Check if odom message uses the magnetometer
  #May want to set this to true, since I can't trust the IMU's yaw
  wait_for_datum: true
  datum: [43.0852459944, -77.6783761986, 0, map, base_link]
